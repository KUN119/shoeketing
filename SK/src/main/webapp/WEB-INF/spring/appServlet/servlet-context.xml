<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- package 이름이 sk로 시작하는 컨드롤러들만 스캔한다.-->
	<context:component-scan base-package="sk" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
	
	<aop:aspectj-autoproxy/>
    <beans:bean id="loggerAspect" class="sk.common.logger.LoggerAspect" />
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- 로그 인터셉터  -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<beans:bean id="loggerInterceptor" class="sk.common.logger.LoggerInterceptor"></beans:bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 회원 인터셉터  -->
	<!-- <mvc:interceptors>
		<mvc:interceptor>
		모든 경로에 인터셉터 적용 
			<mvc:mapping path="/**"/> 
			인터셉터를 거치지 않는 (비회원도 접속 가능한) 경로
			<mvc:exclude-mapping path="/**"/> 나중에 경로 수정하기
			공지사항이나 FAQ 부분도 추가 가능
			<beans:bean id="LoginInterceptor" class="sk.common.interceptor.LoginInterceptor"></beans:bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
	
	<!-- 관리자 인터셉터 -->
	<!-- <mvc:interceptors>
		<mvc:interceptor>
			관리자 인터셉터 적용 경로
			<mvc:mapping path="/admin/**"/> 
			<beans:bean id="adminLoginInterceptor" class="sk.common.interceptor.AdminLoginInterceptor"></beans:bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
	
	<!-- 자동 로그인 인터셉터 -->
	<!-- <mvc:interceptors>
		<mvc:interceptor>
			자동 로그인 인터셉터 적용 경로
			<mvc:mapping path="/**"/> 
			자동 로그인 인터셉터 적용하지 않는 경로
			<mvc:exclude-mapping path="/logout"/>
			<beans:bean id="cookieInterceptor" class="sk.common.interceptor.CookieInterceptor"></beans:bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
	
	<!-- 전체경로 매핑 /를 사용하기위한 디폴트 서블릿 설정 -->
	<mvc:default-servlet-handler/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- resources 경로 설정 -->
	<!-- resources 경로 밑에 폴더 추가될 때마다 추가하기 -->
	<mvc:resources location="/resources/" mapping="/resources/**"></mvc:resources>
	<mvc:resources location="/resources/assets/" mapping="/assets/**"></mvc:resources>
	<mvc:resources location="/resources/assets/css/" mapping="/assets/css/**"></mvc:resources>
	<mvc:resources location="/resources/assets/img/" mapping="/assets/img/**"></mvc:resources>
	<mvc:resources location="/resources/assets/js/" mapping="/assets/js/**"></mvc:resources>
	<mvc:resources location="/resources/assets/vendor/" mapping="/assets/vendor/**"></mvc:resources>
	<mvc:resources location="/resources/assets/vendor/bootstrap/" mapping="/assets/vendor/bootstrap/**"></mvc:resources>
	<mvc:resources location="/resources/assets/vendor/bootstrap/css/" mapping="/assets/vendor/bootstrap/css/**"></mvc:resources>
	<mvc:resources location="/resources/assets/vendor/bootstrap/js/" mapping="/assets/vendor/bootstrap/js/**"></mvc:resources>
	<mvc:resources location="/resources/assets/vendor/bootstrap-icons/" mapping="/assets/vendor/bootstrap-icons/**"></mvc:resources>
	<mvc:resources location="/resources/assets/vendor/bootstrap-icons/fonts/" mapping="/assets/vendor/bootstrap-icons/fonts/**"></mvc:resources>
	<mvc:resources location="/resources/assets/vendor/glightbox/" mapping="/assets/vendor/glightbox/**"></mvc:resources>
	<mvc:resources location="/resources/assets/vendor/glightbox/css/" mapping="/assets/vendor/glightbox/css/**"></mvc:resources>
	<mvc:resources location="/resources/assets/vendor/glightbox/js/" mapping="/assets/vendor/glightbox/js/**"></mvc:resources>
	<mvc:resources location="/resources/assets/vendor/php-email-form/" mapping="/assets/vendor/php-email-form/**"></mvc:resources>
	<mvc:resources location="/resources/assets/vendor/purecounter/" mapping="/assets/vendor/purecounter/**"></mvc:resources>
	<mvc:resources location="/resources/assets/vendor/swiper/" mapping="/assets/vendor/swiper/**"></mvc:resources>
	<mvc:resources location="/resources/assets/vendor/typed.js/" mapping="/assets/vendor/typed.js/**"></mvc:resources>

	<!-- 컨트롤러에서 리턴 받은 뷰의 이름과 빈에 등록되어 있는 id의 값이 같은것을 찾아 실행 시킨다 .페이징-->
    <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0" />
     <!-- 컨트롤러에서 jsp 맵핑 설정 Modelandview 객체를 리턴 받았을 때 -->
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:viewClass="org.springframework.web.servlet.view.JstlView"
		p:prefix="/WEB-INF/views/"
		p:suffix=".jsp"
		p:order="2">
	</beans:bean>
	
 	<!-- tiles 선언 -->
    <beans:bean id="urlBasedViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <beans:property name="order" value="1" /> <!-- 서블릿 호출 순서 -->
    </beans:bean>
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/spring/appServlet/tiles.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
    
    <!-- 컨트롤러가 리턴한 객체의 내용을 분석하여 JSON포맷으로 변환. -->
    <beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
    
    <!-- websocket -->
    <!-- <beans:bean id="alarmHandler" class="kr.or.ddit.handler.AlarmHandler"
		p:alarmDAO-ref="alarmDAO">
	</beans:bean>
	<websocket:handlers allowed-origins="*">
	  <websocket:mapping handler="alarmHandler" path="/ws-alarm" />
	  <websocket:handshake-interceptors>
	  	<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
	  </websocket:handshake-interceptors>
	</websocket:handlers> -->
	
    
</beans:beans>
